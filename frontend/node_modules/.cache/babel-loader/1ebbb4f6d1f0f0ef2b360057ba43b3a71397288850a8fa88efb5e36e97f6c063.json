{"ast":null,"code":"var _jsxFileName = \"/Users/vivektumuluri/Downloads/tempo/frontend/src/components/Calendar/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Paper, Grid, IconButton, Badge, Drawer, List, ListItem, ListItemText, Chip, CircularProgress } from '@mui/material';\nimport { format, startOfMonth, endOfMonth, eachDayOfInterval, isSameMonth, isSameDay, addMonths, subMonths } from 'date-fns';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://127.0.0.1:5000';\nfunction Calendar() {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`${API_URL}/tasks`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setTasks(response.data);\n    } catch (err) {\n      console.error('Failed to fetch tasks:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getDaysInMonth = () => {\n    const start = startOfMonth(currentDate);\n    const end = endOfMonth(currentDate);\n    return eachDayOfInterval({\n      start,\n      end\n    });\n  };\n  const getTasksForDate = date => {\n    return tasks.filter(task => task.due_date && isSameDay(new Date(task.due_date), date));\n  };\n  const handleDateClick = date => {\n    setSelectedDate(date);\n    setDrawerOpen(true);\n  };\n  const priorityColors = {\n    high: '#DC143C',\n    medium: '#FFA500',\n    low: '#4CAF50'\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: 'calc(100vh - 64px)',\n      background: 'linear-gradient(135deg, #0A0A0F 0%, #1a1a1f 100%)',\n      py: 6,\n      px: 4,\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      sx: {\n        p: 4,\n        background: 'rgba(17, 17, 17, 0.6)',\n        backdropFilter: 'blur(20px)',\n        borderRadius: 4,\n        border: '1px solid rgba(255, 255, 255, 0.1)',\n        maxWidth: 1200,\n        width: '100%',\n        boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 5,\n          justifyContent: 'space-between',\n          px: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setCurrentDate(subMonths(currentDate, 1)),\n          sx: {\n            background: 'rgba(255, 255, 255, 0.05)',\n            '&:hover': {\n              background: 'rgba(220, 20, 60, 0.1)'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            sx: {\n              color: '#fff'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          sx: {\n            color: '#fff',\n            fontWeight: 600,\n            letterSpacing: '-0.5px',\n            background: 'linear-gradient(45deg, #fff, rgba(255, 255, 255, 0.7))',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent'\n          },\n          children: format(currentDate, 'MMMM yyyy')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setCurrentDate(addMonths(currentDate, 1)),\n          sx: {\n            background: 'rgba(255, 255, 255, 0.05)',\n            '&:hover': {\n              background: 'rgba(220, 20, 60, 0.1)'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            sx: {\n              color: '#fff'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          mb: 2\n        },\n        children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            sx: {\n              color: 'rgba(255, 255, 255, 0.7)',\n              fontSize: '0.9rem',\n              fontWeight: 500,\n              letterSpacing: '1px'\n            },\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: getDaysInMonth().map(date => {\n          const tasksForDate = getTasksForDate(date);\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              onClick: () => handleDateClick(date),\n              sx: {\n                p: 2.5,\n                textAlign: 'center',\n                cursor: 'pointer',\n                background: isSameDay(date, new Date()) ? 'rgba(220, 20, 60, 0.15)' : 'rgba(255, 255, 255, 0.03)',\n                '&:hover': {\n                  background: 'rgba(255, 255, 255, 0.1)',\n                  transform: 'translateY(-2px)'\n                },\n                border: isSameDay(date, new Date()) ? '1px solid rgba(220, 20, 60, 0.3)' : '1px solid rgba(255, 255, 255, 0.1)',\n                transition: 'all 0.2s ease-in-out',\n                height: '100%',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n                borderRadius: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                badgeContent: tasksForDate.length,\n                color: \"primary\",\n                sx: {\n                  '& .MuiBadge-badge': {\n                    backgroundColor: '#DC143C',\n                    boxShadow: '0 2px 8px rgba(220, 20, 60, 0.3)'\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    color: isSameMonth(date, currentDate) ? '#fff' : 'rgba(255, 255, 255, 0.3)',\n                    fontSize: '1.1rem',\n                    fontWeight: isSameDay(date, new Date()) ? 600 : 400\n                  },\n                  children: format(date, 'd')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)\n          }, date.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"right\",\n      open: drawerOpen,\n      onClose: () => setDrawerOpen(false),\n      PaperProps: {\n        style: {\n          width: 380,\n          background: 'rgba(17, 17, 17, 0.95)',\n          backdropFilter: 'blur(20px)',\n          borderLeft: '1px solid rgba(255, 255, 255, 0.1)'\n        }\n      },\n      children: selectedDate && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            color: '#fff',\n            mb: 3,\n            fontWeight: 600,\n            background: 'linear-gradient(45deg, #fff, rgba(255, 255, 255, 0.7))',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent'\n          },\n          children: [\"Tasks for \", format(selectedDate, 'MMMM d, yyyy')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: [getTasksForDate(selectedDate).map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              mb: 2,\n              background: 'rgba(255, 255, 255, 0.03)',\n              borderRadius: 2,\n              border: '1px solid rgba(255, 255, 255, 0.1)',\n              p: 2,\n              transition: 'all 0.2s ease-in-out',\n              '&:hover': {\n                background: 'rgba(255, 255, 255, 0.05)',\n                transform: 'translateX(-4px)'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: '#fff',\n                  fontSize: '1.1rem',\n                  fontWeight: 500,\n                  mb: 1\n                },\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 23\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  label: task.priority,\n                  size: \"small\",\n                  sx: {\n                    backgroundColor: `${priorityColors[task.priority]}15`,\n                    color: priorityColors[task.priority],\n                    mr: 1,\n                    fontWeight: 500\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 25\n                }, this), task.estimated_time && /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `${task.estimated_time}h`,\n                  size: \"small\",\n                  sx: {\n                    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                    color: '#fff',\n                    fontWeight: 500\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this)), getTasksForDate(selectedDate).length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              color: 'rgba(255, 255, 255, 0.5)',\n              textAlign: 'center',\n              py: 4,\n              fontSize: '1.1rem'\n            },\n            children: \"No tasks for this date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"zjzPQA7gALkkSuQVsY6m/rnQzS4=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Grid","IconButton","Badge","Drawer","List","ListItem","ListItemText","Chip","CircularProgress","format","startOfMonth","endOfMonth","eachDayOfInterval","isSameMonth","isSameDay","addMonths","subMonths","ChevronLeftIcon","ChevronRightIcon","axios","jsxDEV","_jsxDEV","API_URL","Calendar","_s","currentDate","setCurrentDate","Date","tasks","setTasks","loading","setLoading","selectedDate","setSelectedDate","drawerOpen","setDrawerOpen","fetchTasks","token","localStorage","getItem","response","get","headers","data","err","console","error","getDaysInMonth","start","end","getTasksForDate","date","filter","task","due_date","handleDateClick","priorityColors","high","medium","low","sx","minHeight","background","py","px","display","justifyContent","children","elevation","p","backdropFilter","borderRadius","border","maxWidth","width","boxShadow","alignItems","mb","onClick","color","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontWeight","letterSpacing","WebkitBackgroundClip","WebkitTextFillColor","container","spacing","map","day","item","xs","align","fontSize","tasksForDate","textAlign","cursor","transform","transition","height","flexDirection","badgeContent","length","backgroundColor","toString","anchor","open","onClose","PaperProps","style","borderLeft","primary","title","secondary","mt","label","priority","size","mr","estimated_time","id","position","top","left","_c","$RefreshReg$"],"sources":["/Users/vivektumuluri/Downloads/tempo/frontend/src/components/Calendar/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Typography, \n  Paper,\n  Grid,\n  IconButton,\n  Badge,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  Chip,\n  CircularProgress\n} from '@mui/material';\nimport { \n  format, \n  startOfMonth, \n  endOfMonth, \n  eachDayOfInterval,\n  isSameMonth,\n  isSameDay,\n  addMonths,\n  subMonths\n} from 'date-fns';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport axios from 'axios';\n\nconst API_URL = 'http://127.0.0.1:5000';\n\nfunction Calendar() {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`${API_URL}/tasks`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setTasks(response.data);\n    } catch (err) {\n      console.error('Failed to fetch tasks:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getDaysInMonth = () => {\n    const start = startOfMonth(currentDate);\n    const end = endOfMonth(currentDate);\n    return eachDayOfInterval({ start, end });\n  };\n\n  const getTasksForDate = (date) => {\n    return tasks.filter(task => \n      task.due_date && isSameDay(new Date(task.due_date), date)\n    );\n  };\n\n  const handleDateClick = (date) => {\n    setSelectedDate(date);\n    setDrawerOpen(true);\n  };\n\n  const priorityColors = {\n    high: '#DC143C',\n    medium: '#FFA500',\n    low: '#4CAF50'\n  };\n\n  return (\n    <Box\n      sx={{\n        minHeight: 'calc(100vh - 64px)',\n        background: 'linear-gradient(135deg, #0A0A0F 0%, #1a1a1f 100%)',\n        py: 6,\n        px: 4,\n        display: 'flex',\n        justifyContent: 'center',\n      }}\n    >\n      <Paper\n        elevation={0}\n        sx={{\n          p: 4,\n          background: 'rgba(17, 17, 17, 0.6)',\n          backdropFilter: 'blur(20px)',\n          borderRadius: 4,\n          border: '1px solid rgba(255, 255, 255, 0.1)',\n          maxWidth: 1200,\n          width: '100%',\n          boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\n        }}\n      >\n        <Box sx={{ \n          display: 'flex', \n          alignItems: 'center', \n          mb: 5, \n          justifyContent: 'space-between',\n          px: 2 \n        }}>\n          <IconButton \n            onClick={() => setCurrentDate(subMonths(currentDate, 1))}\n            sx={{\n              background: 'rgba(255, 255, 255, 0.05)',\n              '&:hover': {\n                background: 'rgba(220, 20, 60, 0.1)',\n              }\n            }}\n          >\n            <ChevronLeftIcon sx={{ color: '#fff' }} />\n          </IconButton>\n          <Typography variant=\"h4\" sx={{ \n            color: '#fff', \n            fontWeight: 600,\n            letterSpacing: '-0.5px',\n            background: 'linear-gradient(45deg, #fff, rgba(255, 255, 255, 0.7))',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n          }}>\n            {format(currentDate, 'MMMM yyyy')}\n          </Typography>\n          <IconButton \n            onClick={() => setCurrentDate(addMonths(currentDate, 1))}\n            sx={{\n              background: 'rgba(255, 255, 255, 0.05)',\n              '&:hover': {\n                background: 'rgba(220, 20, 60, 0.1)',\n              }\n            }}\n          >\n            <ChevronRightIcon sx={{ color: '#fff' }} />\n          </IconButton>\n        </Box>\n\n        <Grid container spacing={2} sx={{ mb: 2 }}>\n          {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map((day) => (\n            <Grid item xs key={day}>\n              <Typography\n                align=\"center\"\n                sx={{ \n                  color: 'rgba(255, 255, 255, 0.7)',\n                  fontSize: '0.9rem',\n                  fontWeight: 500,\n                  letterSpacing: '1px',\n                }}\n              >\n                {day}\n              </Typography>\n            </Grid>\n          ))}\n        </Grid>\n\n        <Grid container spacing={2}>\n          {getDaysInMonth().map((date) => {\n            const tasksForDate = getTasksForDate(date);\n            return (\n              <Grid item xs key={date.toString()}>\n                <Paper\n                  onClick={() => handleDateClick(date)}\n                  sx={{\n                    p: 2.5,\n                    textAlign: 'center',\n                    cursor: 'pointer',\n                    background: isSameDay(date, new Date()) \n                      ? 'rgba(220, 20, 60, 0.15)'\n                      : 'rgba(255, 255, 255, 0.03)',\n                    '&:hover': {\n                      background: 'rgba(255, 255, 255, 0.1)',\n                      transform: 'translateY(-2px)',\n                    },\n                    border: isSameDay(date, new Date())\n                      ? '1px solid rgba(220, 20, 60, 0.3)'\n                      : '1px solid rgba(255, 255, 255, 0.1)',\n                    transition: 'all 0.2s ease-in-out',\n                    height: '100%',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    borderRadius: 2,\n                  }}\n                >\n                  <Badge\n                    badgeContent={tasksForDate.length}\n                    color=\"primary\"\n                    sx={{\n                      '& .MuiBadge-badge': {\n                        backgroundColor: '#DC143C',\n                        boxShadow: '0 2px 8px rgba(220, 20, 60, 0.3)',\n                      }\n                    }}\n                  >\n                    <Typography\n                      sx={{\n                        color: isSameMonth(date, currentDate)\n                          ? '#fff'\n                          : 'rgba(255, 255, 255, 0.3)',\n                        fontSize: '1.1rem',\n                        fontWeight: isSameDay(date, new Date()) ? 600 : 400,\n                      }}\n                    >\n                      {format(date, 'd')}\n                    </Typography>\n                  </Badge>\n                </Paper>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Paper>\n\n      <Drawer\n        anchor=\"right\"\n        open={drawerOpen}\n        onClose={() => setDrawerOpen(false)}\n        PaperProps={{\n          style: {\n            width: 380,\n            background: 'rgba(17, 17, 17, 0.95)',\n            backdropFilter: 'blur(20px)',\n            borderLeft: '1px solid rgba(255, 255, 255, 0.1)',\n          }\n        }}\n      >\n        {selectedDate && (\n          <Box sx={{ p: 4 }}>\n            <Typography variant=\"h5\" sx={{ \n              color: '#fff', \n              mb: 3,\n              fontWeight: 600,\n              background: 'linear-gradient(45deg, #fff, rgba(255, 255, 255, 0.7))',\n              WebkitBackgroundClip: 'text',\n              WebkitTextFillColor: 'transparent',\n            }}>\n              Tasks for {format(selectedDate, 'MMMM d, yyyy')}\n            </Typography>\n            <List>\n              {getTasksForDate(selectedDate).map((task) => (\n                <ListItem\n                  key={task.id}\n                  sx={{\n                    mb: 2,\n                    background: 'rgba(255, 255, 255, 0.03)',\n                    borderRadius: 2,\n                    border: '1px solid rgba(255, 255, 255, 0.1)',\n                    p: 2,\n                    transition: 'all 0.2s ease-in-out',\n                    '&:hover': {\n                      background: 'rgba(255, 255, 255, 0.05)',\n                      transform: 'translateX(-4px)',\n                    },\n                  }}\n                >\n                  <ListItemText\n                    primary={\n                      <Typography sx={{ \n                        color: '#fff',\n                        fontSize: '1.1rem',\n                        fontWeight: 500,\n                        mb: 1\n                      }}>\n                        {task.title}\n                      </Typography>\n                    }\n                    secondary={\n                      <Box sx={{ mt: 1 }}>\n                        <Chip\n                          label={task.priority}\n                          size=\"small\"\n                          sx={{\n                            backgroundColor: `${priorityColors[task.priority]}15`,\n                            color: priorityColors[task.priority],\n                            mr: 1,\n                            fontWeight: 500,\n                          }}\n                        />\n                        {task.estimated_time && (\n                          <Chip\n                            label={`${task.estimated_time}h`}\n                            size=\"small\"\n                            sx={{\n                              backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                              color: '#fff',\n                              fontWeight: 500,\n                            }}\n                          />\n                        )}\n                      </Box>\n                    }\n                  />\n                </ListItem>\n              ))}\n              {getTasksForDate(selectedDate).length === 0 && (\n                <Typography sx={{ \n                  color: 'rgba(255, 255, 255, 0.5)', \n                  textAlign: 'center',\n                  py: 4,\n                  fontSize: '1.1rem'\n                }}>\n                  No tasks for this date\n                </Typography>\n              )}\n            </List>\n          </Box>\n        )}\n      </Drawer>\n\n      {loading && (\n        <Box\n          sx={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n        >\n          <CircularProgress />\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default Calendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}